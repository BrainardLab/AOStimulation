function [status,cardInfo] = aoemLoadEmulationDataOntoCard(movieData,hrData,vtData,cardInfo,cardInfo,emulatorParams,sampleParas,memSize)
% Load the time series of emulation data onto the card and get it ready to go.
%
% Syntax:
%    [status,cardInfo] = aoemLoadEmulationDataOntoCard(movieData,hrData,vtData,cardInfo,cardInfo,emulatorParams,sampleParas,memSize)
%
% Description:
%    We work by first loading the data onto the D/A card's onboard memory
%    and then later giving it a go signal to ship it out.  This routine
%    does the loading.
%
%    The first three inputs are produced by routine aoemGenerateSignal,
%    while cardInfo, sampleParas, and memSize are generated by
%    aoemCalMemsize and aoemInitialzeCardForEmulation.
%
%    The input emulatorParams is set in the high-level calling program,
%    aoemBasicEmulator, for example.
%
%    The cardInfo structure is updated so that it contains all of the info
%    needed to clock out the emulation, which is possible because the movie
%    has been loaded onto the card.
%
% Inputs:
%    movieData          - Movie data
%    hrData             - Horizontal sync signal
%    vtData             - Vertical sync signal
%    cardInfo           - Struct with DAC card information
%    emulatorParams     - Emulator parameters
%    sampleParas        - Sampling points.
%    memSize            - Memsize for sampling one frame data
% 
% Outputs:
%    status             - Boolean. True means success, false means failure of
%                         some sort.
%    cardInfo           - Struct with DAC card information, updated by this
%                         routine.
% Optional key/value pairs:
%    None.
%
% See also: aoemBasicEmulator, aoemCalMemSize, aoeimInitializeCardForEmulation, aoemGenerateSignal
%

% History:
%   02/02/18  tyh, dhb   Wrote header comments.

    % ***** calculate waveforms *****

    
    

    switch cardInfo.setChannels
        
        case 1
            % ----- get the whole data for one channel with offset = 0 ----- 
            errorCode = spcm_dwSetData (cardInfo.hDrv, 0, cardInfo.setMemsize, cardInfo.setChannels, 0, hrData);
        case 2
            % ----- get the whole data for two channels with offset = 0 ----- 
            errorCode = spcm_dwSetData (cardInfo.hDrv, 0, cardInfo.setMemsize, cardInfo.setChannels, 0, hrData, vtData);
        case 4
            % ----- set data for four channels with offset = 0 ----- 
            errorCode = spcm_dwSetData (cardInfo.hDrv, 0, cardInfo.setMemsize, cardInfo.setChannels, 0, hrData, vtData, movieData, movieData);
    end
    
if (errorCode ~= 0)
    [status, cardInfo] = spcMCheckSetError (errorCode, cardInfo);
    spcMErrorMessageStdOut (cardInfo, 'Error: spcm_dwSetData:\n\t', true);
    return;
else
    status = 0;
end
end
